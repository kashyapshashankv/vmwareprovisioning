---
  - name: GET IP
    set_fact:
       ip_address: "192.168.18.179"
       netmask: "255.255.255.192"
       gateway: "192.168.18.129"
       dns_server1: "192.168.18.150"
       dns_server2: "192.168.18.151"
       vlanname : "XaaS|AP|epg_XaaS_DMZ_HCM"
    when: index | int == 0

  - name: GET IP
    set_fact:
       ip_address: "192.168.18.180"
       netmask: "255.255.255.192"
       gateway: "192.168.18.129"
       dns_server1: "192.168.18.150"
       dns_server2: "192.168.18.151"
       vlanname : "XaaS|AP|epg_XaaS_DMZ_HCM"
    when: index | int == 1

  - debug:
        msg : "CI created with following details {{ server['name'] }} {{ip_address}}"    

  # - name: Check if VM Exists
  #   community.vmware.vmware_vm_info:
  #     hostname: '{{ vcenter_hostname }}'
  #     username: '{{ vcenter_username }}'
  #     password: '{{ vcenter_password }}'
  #     vm_name: '{{ server_hostname }}'
  #     validate_certs: false
  #   delegate_to: localhost
  #   register: vm_info

  # - block: 

  #   - name: Create the VM
  #     vmware_guest:
  #       hostname: '{{ vcenter_hostname }}'
  #       username: '{{ vcenter_username }}'
  #       password: '{{ vcenter_password }}'
  #       validate_certs: no
  #       cluster: '{{ esxi_server }}'
  #       datacenter: '{{ datacenter }}'
  #       folder: '{{ folder }}'
  #       name: '{{ server_hostname }}'
  #       state: poweredon
  #       annotation: "Created by Ansible"
  #       disk:
  #       - size_gb: 150
  #         type: thin
  #         autoselect_datastore: true
  #       networks:
  #       - name: '{{ vlanname }}'
  #         type: static
  #         ip: '{{ ip_address }}'
  #         netmask: '{{ netmask }}'
  #         gateway: '{{ gateway }}'
  #         dns_servers:
  #           - '{{ dns_server1 }}'
  #           - '{{ dns_server2 }}'
  #       hardware:
  #         memory_mb: '{{ usermanifest["memory"][0:-1]*1024 | int }}'
  #         num_cpus: '{{ usermanifest["cpu"] }}'
  #         hotadd_cpu: true
  #         hotadd_memory: true
  #       customization:
  #         dns_servers:
  #           - '{{ dns_server1 }}'
  #           - '{{ dns_server2 }}'
  #         domain : '{{ usermanifest["ad_domain"] }}'
  #         hostname: '{{ server_hostname }}'
  #       template: '{{ templatename }}'
  #       wait_for_ip_address: yes
  #       wait_for_ip_address_timeout: 600

  #   - set_fact:
  #         ci_update: "{{server_hostname}}-{{ip_address}}-{{server_memory}}-{{server_cpu}}-{{creationdate}}"
          
  #   - debug:
  #         msg : "CI created with following details {{ ci_update }}"